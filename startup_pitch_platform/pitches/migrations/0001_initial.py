# Generated by Django 5.2 on 2025-04-15 05:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pitch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('tagline', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('company_name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='pitch_logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='pitch_covers/')),
                ('website', models.URLField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('business_model', models.TextField(blank=True, null=True)),
                ('market_size', models.TextField(blank=True, null=True)),
                ('competition', models.TextField(blank=True, null=True)),
                ('traction', models.TextField(blank=True, null=True)),
                ('funding_stage', models.CharField(choices=[('pre_seed', 'Pre-Seed'), ('seed', 'Seed'), ('series_a', 'Series A'), ('series_b', 'Series B'), ('series_c', 'Series C'), ('growth', 'Growth')], default='pre_seed', max_length=20)),
                ('funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valuation', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('revenue_model', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('featured', 'Featured'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PitchAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='pitch_attachments/')),
                ('file_type', models.CharField(choices=[('pdf', 'PDF Document'), ('image', 'Image'), ('financial', 'Financial Document'), ('other', 'Other')], default='other', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('pitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='pitches.pitch')),
            ],
        ),
        migrations.CreateModel(
            name='PitchComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='pitches.pitch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitch_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PitchQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('answered', 'Answered'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='pitches.pitch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitch_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PitchLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='pitches.pitch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitch_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('pitch', 'user')},
            },
        ),
    ]
